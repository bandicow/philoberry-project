name: Update Philoberry frontend

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-northeast-2
  ECS_SERVICE: frontend-service-dev
  ECS_CLUSTER: philoberry-ecs-cluster
  ECS_TD: ./frontend.json.tpl
  CONTAINER_NAME: philoberry-repository_frontend

jobs:
  update_service:
    runs-on: ubuntu-latest
    environment:
      name: Configure dev
    name: Update ECS Service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env File
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" > .env
           echo "GOOGLE_CLIENT_SECRET=${{secrets.GOOGLE_CLIENT_SECRET}}" >> .env
           echo "KAKAO_CLIENT_ID=${{secrets.KAKAO_CLIENT_ID}}" >> .env
           echo "KAKAO_CLIENT_SECRET=${{secrets.KAKAO_CLIENT_SECRET}}" >> .env
           echo "NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}}" >> .env
           echo "S3_BUCKET=${{secrets.S3_BUCKET}}" >> .env
           echo "AWS_REGION=${{env.AWS_REGION}}" >> .env
           echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
           echo "NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}}" >> .env
           echo "S3_ACCESS_KEY=${{secrets.S3_ACCESS_KEY}}" >> .env
           echo "S3_SECRET_ACCESS_KEY=${{secrets.S3_SECRET_ACCESS_KEY}}" >> .env
           echo "NEXT_PUBLIC_URL=${{secrets.NEXT_PUBLIC_URL}}" >> .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY_URL: ${{ secrets.ECR_REGISTRY_URL }}
          ECR_REPOSITORY_NAME: "philoberry_front/service_dev"
          IMAGE_TAG: latest
        run: |
          docker build -t ${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG} -f client/Dockerfile.next .
          docker push ${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG}
          echo "::set-output name=image::${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG}"

      - name: Get Task Definition ARN from SSM
        id: get-task-def
        run: |
          TASK_DEF=$(aws ssm get-parameter --name "/myapp/frontend_task_definition_arn" --query "Parameter.Value" --output text)
          echo "::set-output name=task_def::$TASK_DEF"

      - name: Create appspec.json
        run: |
          echo '{"version": "0.2", "Resources": [{"TargetService": {"Type": "AWS::ECS::Service", "Properties": {"TaskDefinition": "'${{ steps.get-task-def.outputs.task_def }}'", "LoadBalancerInfo": {"ContainerName": "philoberry-repository_frontend", "ContainerPort": 3000}}}}]}' > client/appspec.json

      - name: Commit and push appspec.json
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'bandicow'
          git config --global user.email 'kjh45388117@gmail.com'
          git add client/appspec.json
          git commit -m "Update frontend appspec.json"
          git push https://${{secrets.GH_TOKEN }}@github.com/bandicow/philoberry-project.git main
