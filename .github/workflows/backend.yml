name: Update Philoberry backend

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-northeast-2
  ECS_SERVICE: backend-service-dev
  ECS_CLUSTER: philoberry-ecs-cluster
  ECS_TD: ./backend.json.tpl
  CONTAINER_NAME: philoberry-repository_express
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
  S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
  NEXT_PUBLIC_SERVER_URL: ${{ secrets.NEXT_PUBLIC_SERVER_URL }}

jobs:
  update_service:
    runs-on: ubuntu-latest
    environment: Configure dev
    name: Update ECS Service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env File
        run: |
          echo "S3_BUCKET=${{env.S3_BUCKET}}" >> .env
          echo "AWS_REGION=${{env.AWS_REGION}}" >> .env
          echo "DATABASE_URL=${{env.DATABASE_URL}}" >> .env
          echo "S3_ACCESS_KEY=${{env.S3_ACCESS_KEY}}" >> .env
          echo "S3_SECRET_ACCESS_KEY=${{env.S3_SECRET_ACCESS_KEY}}" >> .env
          echo "NEXT_PUBLIC_SERVER_URL=${{env.NEXT_PUBLIC_SERVER_URL}}" >> .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY_URL: ${{ secrets.ECR_REGISTRY_URL }}
          ECR_REPOSITORY_NAME: "philoberry_express/service_dev"
          IMAGE_TAG: latest
        run: |
          docker build -t ${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG} -f server/Dockerfile.express . 
          docker push ${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG}
          echo "::set-output name=image::${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG}"
