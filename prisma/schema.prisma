generator client {
  provider = "prisma-client-js"
  log      = ["query", "info", "warn", "error"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Artist {
  artist_id    Int       @id @default(autoincrement())
  artist_image String?
  name         String    @unique
  major        String?
  profile      String?
  website_url  String?
  Artwork      Artwork[]
}

model Artwork {
  artwork_id  Int     @id @default(autoincrement())
  artist_name String
  title       String
  mainImage   String
  description String
  createdAt   Int?
  material    String
  size        String
  price       Float
  isSold      Boolean
  order       Int
  Artist      Artist  @relation(fields: [artist_name], references: [name])
  ArtworkImages ArtworkImage[]


  @@index([artist_name], map: "Artwork_artist_name_fkey")
}

model ArtworkImage {
  id        Int     @id @default(autoincrement())
  s3key     String
  artworkId Int
  Artwork   Artwork @relation(fields: [artworkId], references: [artwork_id])

  @@index([artworkId], map: "ArtworkImages_artworkId_fkey")
}

model PickArtist {
  id          Int    @id @default(100)
  artist_name String
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  category     String
  price        Float
  material     String?
  color        String?
  size         String?
  details      String?
  precautions  String?
  mainImage    String?
  seller       String
  stock        Int
  url          String?
  createdAt    DateTime       @default(now())
  ProductImage ProductImage[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  s3key     String
  productId Int
  Product   Product @relation(fields: [productId], references: [id])

  @@index([productId], map: "ProductImage_productId_fkey")
}

model Setting {
  id              Int    @id @default(100)
  backgroundColor String
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?
  email    String  @unique
  image    String?
  password String?
  isAdmin  Boolean @default(false)
}
